import tensorflow as tf 
import numpy as np
import matplotlib.pyplot as plt

fashion_mnist = tf.keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

train_images.shape

test_images.shape

train_labels.shape

test_labels.shape

print(train_images[0])

train_labels[0]

train_images = train_images / 255
test_images = test_images / 255

train_images[0]

plt.figure(figSize=(10,10))
for i in range(25):
    plt.subplt(5,5, i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(train_images[i], cmap = plt.cm.binary)
    plt.xlabel(class_names[train_labels[i]])
plt.show()

plt.imshow(train_images[0])

train_images = train_images.reshape(-1, 28, 28, 1)
test_images = test_images.reshape(-1, 28, 28, 1)

train_images.shape
test_images.shape
train_labels.shape
test_labels.shape 

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import (
    Conv2D, Dense, Flatten, Dropout, MaxPool2D
)

model = Sequential()
model.add(Conv2D(32,(3,3), activation="relu", input_shape(28,28,1)))
model.add(MaxPool2D((2,2)))
model.add(Dropout(0.25))
model.add(Conv2D(64, (3,3), activation="relu"))
model.add(MaxPool2D((2,2)))
model.add(Dropout(0.25))
model.add(Conv2D(128, (3,3), activation="relu"))
model.add(Flatten())
model.add(Dense(units=128, activation="relu"))
model.add(Dropout(0.25))
model.add(Dense(units = 10, activation="softmax"))

model.summary()

model.compile(optimizer="adam", loss="sparse_categorical_crossentropy", metrics=["accuracy"])

history = model.fit(train_images, train_labels, epochs=1, verbose= 1, validation_data=(test_images, test_labels))

test_loss, test_acc = model.evaluate(test_images, test_labels)

print('test_loss = ', test_loss)
print('test_acc = ', test_acc)